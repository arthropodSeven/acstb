.skill {
  display: flex;
  flex-direction: row;

  & > * {
    padding-block: var(--s-2);
    padding-inline: var(--s-1);
  }
}

.print-skills {
  list-style-type: none;
  columns: auto 14ch;
  column-gap: calc((1 / 8) * 100%);
}

main > :--heading {
  break-after: avoid;
}

.live,
.live-icon {
  display: flex;
  justify-content: center;
  align-items: center;
}

.live-icon {
  width: var(--s0);
  height: var(--s0);
  border-width: var(--s-4);
  border-style: solid;
  border-color: currentColor;
  border-radius: 50%;

  & > .target {
    width: var(--s-1);
    height: var(--s-1);
    background-color: currentColor;
    border-radius: inherit;

    animation: 2s ease-in 1s infinite alternate pulse;
    @media (prefers-reduced-motion) {
      animation: none;
    }
  }
}

.line-item {
  break-inside: avoid;
}

.line-item > :first-child {
  flex-basis: content;

  padding: calc(var(--s-4) + var(--s-1));
  display: flex;
  flex-direction: column;
  align-items: center;

  & > *:not(b) {
    flex-basis: content;
    flex-grow: 0;

    padding-inline: var(--s-3);
  }

  & > *:first-child {
    border-bottom: var(--s-4) solid currentColor;
  }

  & > .live:first-child {
    border-bottom: none;
  }

  & > *:last-child {
    border-top: var(--s-4) solid currentColor;
  }

  & > .dotted-line {
    width: var(--s-4);

    /* Such that the full height of these flex items works out to roughly
     * the full height of their container, divided by 1.62 */
    flex-basis: calc(
      (100% - ((2 * var(--s-2) + (2 * var(--s-4) + 1.5em)))) / 1.62
    );

    background: repeating-linear-gradient(
      to bottom,
      currentColor 0,
      currentColor var(--s-1),
      transparent var(--s-1),
      transparent var(--s0)
    );
  }
}
